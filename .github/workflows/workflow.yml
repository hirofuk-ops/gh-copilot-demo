# GitHub Action workflow that runs on push to main branch
# Docker build and push the album-api image to ACR
name: Build and Push Docker Image
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        run: docker buildx build --push --tag ${{ secrets.ACR_REGISTRY }}/album-api:${{ github.run_id }} .
            
      - name: Logout from Azure Container Registry
        run: docker logout ${{ secrets.ACR_REGISTRY }}

# run tests on the album-api image
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Pull and run tests on album-api image
        run: |
          docker pull ${{ secrets.ACR_REGISTRY }}/album-api:${{ github.run_id }}
          docker run --rm ${{ secrets.ACR_REGISTRY }}/album-api:${{ github.run_id }} pytest tests/
            
      - name: Logout from Azure Container Registry
        run: docker logout ${{ secrets.ACR_REGISTRY }}
      - name: Notify success
        run: echo "Docker image built and pushed successfully, tests passed."
      - name: Notify failure
        if: failure()
        run: echo "Docker image build or tests failed."
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results

# deploy the album-api image to the dev AKS cluster
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/setup-azure-cli@v1

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to AKS
        run: |
          az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
          kubectl set image deployment/album-api album-api=${{ secrets.ACR_REGISTRY }}/album-api:${{ github.run_id }}
          kubectl rollout status deployment/album-api

      - name: Notify deployment success
        run: echo "Deployment to AKS successful."
      - name: Notify deployment failure
        if: failure()
        run: echo "Deployment to AKS failed."
      - name: Logout from Azure
        run: az logout
      - name: Logout from Azure Container Registry
        run: docker logout ${{ secrets.ACR_REGISTRY }}
      - name: Upload deployment logs
        uses: actions/upload-artifact@v2
        with:
          name: deployment-logs

# find and replace the %%VERSION%% by the github action run id in every appmanifest.yml file
      - name: Replace %%VERSION%% in appmanifest.yml files
        run: |
          find . -name "appmanifest.yml" -exec sed -i "s/%%VERSION%%/${{ github.run_id }}/g" {} +



